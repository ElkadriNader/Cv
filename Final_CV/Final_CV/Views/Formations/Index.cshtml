@model PagedList.IPagedList<Final_CV.Models.Formations>
@using PagedList.Mvc;




@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <div class="wrapper wrapper-content animated fadeInUp">
            @using (Html.BeginForm("Index", "Formations", FormMethod.Get))
            {
                <div class="row">

                    <div class="col-sm-4">

                        <a href="@Url.Action("Create", null,null)" class="btn btn-success" role="button"><i class="glyphicon glyphicon-plus-sign"></i> Ajouter une formation/un stage</a>
                    </div>
                    <div class="col-sm-4">

                    </div>

                    <div class="col-sm-4">

                        <div class="form-inline" style="text-align:right">
                            <button type="button" id="loading-example-btn" class="btn btn-default btn-sm"><i class="fa fa-refresh"></i> Refresh</button>
                            <input type="text" name="SearchString" class="form-control" placeholder="taper le titre  ici ...">
                            <button type="submit" class="btn btn-default">
                                <span class="glyphicon glyphicon-search" style="color:blue;"></span>
                            </button>
                        </div>

                    </div>


                </div>
            }
            <br />
            <div class="project-list">
                <table class="table table-responsive">
                    <tbody>
                        <tr>
                            <th>
                                Année
                            </th>
                            <th>
                                Titre
                            </th>
                            <th>
                                Place
                            </th>
                            <th>
                                Description
                            </th>
                            <th>
                                Nom de la réference
                            </th>
                           
                            <th>Actions</th>
                        </tr>

                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Year)
                                </td>
                                <td style="width:180px;">
                                    @Html.DisplayFor(modelItem => item.Title)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Place)
                                </td>
                                <td style="width:200px;">
                                    @Html.DisplayFor(modelItem => item.Description)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ReferenceName)
                                </td>
                               
                                <td>
                                    <p class="pull-right inline">
                                        <a class="btn btn-default btn-sm" href="@Url.Action("Edit",  new { id=item.FormationID })">
                                            <i class="fa fa-pencil dim"></i>
                                        </a>
                                        <a class="btn btn-default btn-sm" href="@Url.Action("Details", new { id=item.FormationID })">
                                            <i class="fa fa-eye dim"></i>
                                        </a>
                                        <a class="btn btn-default btn-sm" href="@Url.Action("Delete", new { id=item.FormationID })">
                                            <i class="fa fa-trash dim"></i>
                                        </a>
                                    </p>

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="pull-right">

                @Html.PagedListPager(Model, Page => Url.Action("Index", new { Page, pageSize = Model.PageSize }))
                Consulter @Model.FirstItemOnPage jusqu'à @Model.LastItemOnPage de  @Model.TotalItemCount élements

            </div>
                </div>
            </div>
        </div>



<link href="~/Templates/css/bootstrap.min.css" rel="stylesheet">
<link href="~/Templates/font-awesome/css/font-awesome.css" rel="stylesheet">
<link href="~/Templates/css/animate.css" rel="stylesheet">
<script src="~/Templates/js/jquery-2.1.1.js"></script>
<script src="~/Templates/js/bootstrap.min.js"></script>
<script src="~/Templates/js/plugins/metisMenu/jquery.metisMenu.js"></script>
<script src="~/Templates/js/plugins/slimscroll/jquery.slimscroll.min.js"></script>
<!-- Custom and plugin javascript -->
<script src="~/Templates/js/inspinia.js"></script>
<script src="~/Templates/js/plugins/pace/pace.min.js"></script>

<script>
                $(document).ready(function () {

                    $('#loading-example-btn').click(function () {
                        btn = $(this);
                        simpleLoad(btn, true)
                        simpleLoad(btn, false)
                    });
                });

                function simpleLoad(btn, state) {
                    if (state) {
                        btn.children().addClass('fa-spin');
                        btn.contents().last().replaceWith(" Loading");
                    } else {
                        setTimeout(function () {
                            btn.children().removeClass('fa-spin');
                            btn.contents().last().replaceWith(" Refresh");
                        }, 2000);
                    }
                }
</script>